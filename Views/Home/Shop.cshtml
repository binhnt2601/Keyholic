@model List<ProductVariant>
@{
    ViewData["Title"] = "Shop";
    var productByPriceRange = ViewBag.countProductByPriceRange as SortedList<string, int>;
}

<!-- Shop Start -->
<div class="container-fluid pt-5">
    <div class="row px-xl-5">
        <!-- Shop Sidebar Start -->
        <div class="col-lg-3 col-md-12">
            <!-- Price Start -->
            <div class="border-bottom mb-4 pb-4">
                <h5 class="font-weight-semi-bold mb-4">Lọc theo giá</h5>
                <form>
                    <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                        <input type="checkbox" name="price" value="" class="custom-control-input" id="price-">
                        <label class="custom-control-label" for="price-">Tất cả</label>
                        <span class="badge border font-weight-normal">@productByPriceRange["all"]</span>
                    </div>
                    <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                        <input type='checkbox' name='price' value=1 class="custom-control-input" id="price-1">
                        <label class="custom-control-label" for="price-1">&lt;1.000.000</label>
                        <span class="badge border font-weight-normal">@productByPriceRange["from0to1"]</span>
                    </div>
                    <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                        <input type="checkbox" name="price" value=2 class="custom-control-input" id="price-2">
                        <label class="custom-control-label" for="price-2">1.000.000 - 2.000.000</label>
                        <span class="badge border font-weight-normal">@productByPriceRange["from1to2"]</span>
                    </div>
                    <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                        <input type="checkbox" name="price" value=3 class="custom-control-input" id="price-3">
                        <label class="custom-control-label" for="price-3">2.000.000 - 3.000.000</label>
                        <span class="badge border font-weight-normal">@productByPriceRange["from2to3"]</span>
                    </div>
                    <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                        <input type="checkbox" name="price" value=4 class="custom-control-input" id="price-4">
                        <label class="custom-control-label" for="price-4">3.000.000 - 5.000.000</label>
                        <span class="badge border font-weight-normal">@productByPriceRange["from3to5"]</span>
                    </div>
                    <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between">
                        <input type="checkbox" name="price" value=5 class="custom-control-input" id="price-5">
                        <label class="custom-control-label" for="price-5">&gt;5.000.000</label>
                        <span class="badge border font-weight-normal">@productByPriceRange["over5"]</span>
                    </div>
                </form>
                <button class="mt-2 btn btn-outline-dark" type="button" id="btnFilter">Lọc</button>
            </div>
            <!-- Price End -->
        </div>
        <!-- Shop Sidebar End -->
        <!-- Shop Product Start -->
        <div class="col-lg-9 col-md-12">
            <div class="row pb-3">
                <div class="col-12 pb-1">
                    <div class="d-flex align-items-center justify-content-between mb-4">
                        <div class="dropdown ml-4">
                            <label for="order" class="font-weight-semi-bold mb-4">Giá:</label>
                            <select name="order" id="sortOrder">
                                <option id="sortAsc" value="asc">Tăng dần</option>
                                <option id="sortDes" value="des" selected>Giảm dần</option>
                            </select>
                        </div>
                    </div>
                </div>
                @if(Model.Count > 0)
                {
                    foreach (var product in Model)
                    {
                        <div class="col-lg-4 col-md-6 col-sm-12 pb-1">
                            
                            <div class="card product-item border-0 mb-4">
                                <div class="card-header product-img position-relative overflow-hidden bg-transparent border p-0">
                                    @if(product.Quantity <= 0)
                                    {
                                        <h1 style="position: absolute; top:4%; left:5%" class="badge badge-danger">HẾT HÀNG</h1>
                                    }
                                    
                                    <img class="img-fluid w-100" src="@product.ImgSrc" alt="">
                                </div>
                                <div class="card-body border-left border-right text-center p-0 pt-4 pb-3">
                                    <h6 class="text-truncate mb-3">@product.ProductName <span class="badge badge-secondary">@product.Name</span></h6>
                                    <div class="d-flex justify-content-center">
                                        <h6>@product.CurrentPrice</h6><h6 class="text-muted ml-2">
                                            @if(product.CurrentPrice < product.OriginalPrice)
                                            {
                                                <del>@product.OriginalPrice</del>
                                            }
                                        </h6>
                                    </div>
                                </div>
                                
                                <div class="card-footer d-flex justify-content-between bg-light border">
                                    <a asp-action="ProductDetail" asp-route-id="@product.ProductId" class="btn btn-sm text-dark p-0"><i class="fas fa-eye text-primary mr-1"></i>Chi tiết</a>
                                        <button class="btnAddToCart btn btn-sm text-dark p-0" data-productid="@product.Id" @((product.Quantity > 0)?string.Empty:"disabled")><i class="fas fa-shopping-cart text-primary mr-1"></i>Thêm vào giỏ hàng</button>
                                </div>
                            </div>
                        </div>
                    }
                    <div class="col-12 pb-1">
                                <partial name="_PagingXTL" model="@ViewBag.pagingModel" />

                    </div>
                    <div class="col-12 pb-1 justify-content-center">
                        
                    </div>
                }
                else
                {
                    <div class="col-12 pt-2 alert alert-danger text-center" role="alert">
                        <h3>Không có sản phẩm phù hợp!</h3>
                    </div>
                    
                }

                
            </div>
        </div>
        <!-- Shop Product End -->
    </div>
</div>
<!-- Shop End -->

<script>
    $("document").ready(function () {
        const urlParams = new URLSearchParams(window.location.search);
        let priceRangeValue = parseInt(urlParams.get('priceRange'));
        let sortOrder = urlParams.get('sortOrder');
        if (sortOrder === 'des') {
            $('#sortOrder').find('option[value="des"]').attr('selected', 'selected');            
        }
        else { 
            $('#sortOrder').find('option[value="asc"]').attr('selected', 'selected');
        }
        if (![1, 2, 3, 4, 5].includes(priceRangeValue)) {
            priceRangeValue = "";
        }
        let checkBoxId = "price-" + priceRangeValue;
        console.log(checkBoxId);
        LoadSelectedFilter(checkBoxId);
    });
    $('#sortOrder').on('change', function () {
        var currentUrl = new URL(window.location.href);
        currentUrl.searchParams.set('sortOrder', $(this).val());
        window.location.replace(currentUrl);
    });
    $('input[name="size"]').click(function () {
        $('input[name="size"]').not(this).prop('checked', false);
    });
    $('input[name="price"]').click(function () {
        $('input[name="price"]').not(this).prop('checked', false);
    });
    $('#btnFilter').on('click', function () {
        layout = $('input[name="size"]:checked').val();
        let priceRange = parseInt($('input[name="price"]:checked').val());
        let url = "@Url.Action("Shop", "Home")?priceRange=" + priceRange;
        window.location.replace(url);
    });
    $('.btnAddToCart.btn.btn-sm.text-dark.p-0').each(function () {
        $(this).on('click', function () {
            let id = $(this).attr('data-productid');
            let actionLink = "@Html.Raw(@Url.Action("AddToCart", "Cart"))?id=" + id + '&quantity=1';
            $.ajax({
                type: 'GET',
                url: actionLink,
                success: function (res) {
                    if (res) {
                        swal("OK", "Đã thêm sản phẩm vào giỏ hàng", "success")
                            .then(() => {
                                location.reload();
                            });
                    }
                    else { 
                        swal("Lỗi", "Số lượng đặt vượt quá số lượng hiện có", "warning")
                            .then(() => {
                                location.reload();
                            });
                    }
                    
                },
                failure: function (response) {
                    swal("Lỗi", "Xảy ra lỗi", "warning")
                        .then(() => {
                            location.reload();
                        });;
                }
            });
        });
    });
    
    function LoadSelectedFilter(id)
    {
        $('#'+id).attr('checked', true);
    }

</script>